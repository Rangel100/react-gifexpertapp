{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAKlB,SAEI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAqB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,YC5BrBC,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0BzB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OApBAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IASGc,EDvByBK,CAAanB,GAAhCU,EAAb,EAAOJ,KAAcO,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIjB,UAAW,oCAAf,SAAoDI,IAEnDa,GAAW,mBAAGjB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEhBxB2B,EAAe,WAIxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ+C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCtBnCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.669de128.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleinputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n            setCategories(cats=>[inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input type=\"text\" value={inputValue} onChange={handleinputChange}/>\r\n        \r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=eYmDDxADTBDTfZa5q1e10Ag64QqXDs5T&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","// import React, { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        /> \r\n                    ))\r\n                    \r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n    }, [category]);\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5],\r\n    //         loading:false\r\n    //     });\r\n    // }, 3000);\r\n\r\n    return state; // {data:[], loading: true}\r\n};","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\"; \r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Piece', 'Luffy', 'Zoro'];\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories([...categories, 'Sangi']);\r\n    //     setCategories(cats=>[...cats, 'Sangi'])\r\n    // };\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            {/* <button onClick= {handleAdd}>Agregar</button> */}\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}